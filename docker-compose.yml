# version: '3.9'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: bitnami/kafka:3.6
    ports:
      - "9092:9092"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    ports:
      - "8080:8080"
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
    depends_on:
      - kafka

  redis:
    image: redis:7
    ports:
      - "6379:6379"

  qdrant:
    image: qdrant/qdrant
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant_storage:/qdrant/storage

  # kafka-init:
  #   build: .
  #   depends_on:
  #     - kafka
  #   command: python create_kafka_topics.py
  #   environment:
  #     KAFKA_BOOTSTRAP_SERVERS: kafka:9092

  gateway:
    build:
      context: ./gateway
    depends_on:
      - kafka
      - redis
    environment:
      REDIS_HOST: redis
      REDIS_PORT: 6379
    ports:
      - "8000:8000"

  preprocessor:
    build:
      context: ./pre_processor
    depends_on:
      - kafka
      - redis
    environment:
      REDIS_HOST: redis
      REDIS_PORT: 6379

  similarity_search:
    build:
      context: .
      dockerfile: ./similarity_search/Dockerfile
    depends_on:
      - kafka
      - qdrant
    environment:
      QDRANT_HOST: qdrant
      QDRANT_PORT: 6333

  language_model:
    build:
      context: ./llm_service
    depends_on:
      - kafka
    env_file:
      - ./llm_service/.env

  websocket_dispatcher:
    build:
      context: ./websocket_dispatcher
    depends_on:
      - kafka
      - redis
    environment:
      REDIS_HOST: redis
      REDIS_PORT: 6379

  read_and_process:
    build:
      context: .
      dockerfile: ./read_and_process/Dockerfile
    depends_on:
      - qdrant
    volumes:
      - ./read_and_process/temp_uploads:/app/temp_uploads
    ports:
      - "8001:8001"

volumes:
  qdrant_storage:
